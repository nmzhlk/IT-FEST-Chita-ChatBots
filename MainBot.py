import sqlite3

from telegram import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import CommandHandler, CallbackQueryHandler
from telegram.ext import Updater, MessageHandler, Filters

TOKEN = ""  # Insert your own bot token here

TARGET_ID = 0

connection = sqlite3.connect("applications.db", check_same_thread=False)
cursor = connection.cursor()

cursor.execute(
    """CREATE TABLE IF NOT EXISTS applications ([id] INTEGER PRIMARY KEY, 
    [surname] TEXT, [name] TEXT, [patronymic] TEXT, [birthday] TEXT, [phone] TEXT, [email] TEXT, 
    [info] TEXT, [position] TEXT, [education] TEXT, [status] TEXT)"""
)

reply_keyboard = [
    [KeyboardButton("‚úÖ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞")],
    [KeyboardButton("‚ùì –ü–æ–º–æ—â—å")]
]
reply_markup = ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True, resize_keyboard=True)


def start(update, context):
    update.message.reply_text("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! üëã")
    update.message.reply_text("–Ø ‚Äî –±–æ—Ç –¥–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ.")
    update.message.reply_text("–î–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ ‚úÖ", reply_markup=reply_markup)


def helper(update, context):
    update.message.reply_text(
        "‚ùó –ß—Ç–æ–±—ã –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É, –í–∞–º –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —Å–ª–µ–¥—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ:\n\n"
        "1. –§–ò–û\n"
        "2. –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è\n"
        "3. –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n"
        "4. Email\n"
        "5. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n"
        "6. –ñ–µ–ª–∞–µ–º–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞\n"
        "7. –£—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è")

    update.message.reply_text("–î–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ ‚úÖ", reply_markup=reply_markup)


def apply(update, context):
    update.message.reply_text("‚úÖ –î–∞–≤–∞–π—Ç–µ –∑–∞–ø–æ–ª–Ω–∏–º –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É :)\n\n"
                              "‚ùó –î–ª—è —É—Å–ø–µ—à–Ω–æ–π —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—É–Ω–∫—Ç–∞ –ø–µ—Ä–µ–¥ –¥–∞–Ω–Ω—ã–º–∏!\n"
                              "‚ùì –ù–∞–ø—Ä–∏–º–µ—Ä: 1. –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á")

    update.message.reply_text("1. –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –§–ò–û")


def button(update, context):
    query = update.callback_query
    query.answer()

    show = "".join([char for char in query.data][3:])

    if query.data.startswith("6."):
        query.edit_message_text(text=f"6. –í—ã–±—Ä–∞–Ω–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç—å: {show} ‚úÖ")
        cursor.execute("UPDATE applications SET position = ? WHERE id = ?", (show, TARGET_ID))
        connection.commit()

    if query.data.startswith("7."):
        query.edit_message_text(text=f"7. –£—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è: {show} ‚úÖ")
        cursor.execute("UPDATE applications SET education = ? WHERE id = ?", (show, TARGET_ID))
        connection.commit()


def interpreter(update, context):
    message = update.message.text
    global TARGET_ID

    if message == "‚úÖ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞":
        apply(update, context)

    if message == "‚ùì –ü–æ–º–æ—â—å":
        helper(update, context)

    if message.startswith("1."):
        message_split = message.split()
        if len(message_split) == 4:
            TARGET_ID += 1
            cursor.execute("INSERT OR REPLACE INTO applications (id) VALUES (?)", (TARGET_ID,))
            cursor.execute("UPDATE applications SET status = ? WHERE id = ?", ("–ù–æ–≤–∞—è", TARGET_ID))
            cursor.execute("UPDATE applications SET surname = ? WHERE id = ?",
                           (message_split[1], TARGET_ID))
            cursor.execute("UPDATE applications SET name = ? WHERE id = ?",
                           (message_split[2], TARGET_ID))
            cursor.execute("UPDATE applications SET patronymic = ? WHERE id = ?",
                           (message_split[3], TARGET_ID))
            connection.commit()
            update.message.reply_text(
                f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {message_split[1]} {message_split[2]} {message_split[3]}")
            update.message.reply_text("2. –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è\n"
                                      "‚ùó –§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã: –î–î.–ú–ú.–ì–ì–ì–ì")
        else:
            update.message.reply_text("‚ùó –§–ò–û –≤–≤–µ–¥–µ–Ω–æ –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥")

    if message.startswith("2."):
        message_split = message.split(".")[1:]
        if len(message_split) == 3:
            db_date = message.split()[-1]
            cursor.execute("UPDATE applications SET birthday = ? WHERE id = ?",
                           (db_date, TARGET_ID))
            connection.commit()
            update.message.reply_text(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {db_date}")
            update.message.reply_text("3. –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n"
                                      "‚ùó –î–æ–ø—É—Å–∫–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã")
        else:
            update.message.reply_text("‚ùó –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–æ, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥\n"
                                      "‚ùó –§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã: –î–î.–ú–ú.–ì–ì–ì–ì")

    if message.startswith("3."):
        phone = [char for char in message][3:]
        if len(phone) == 11:
            db_date = "".join(phone)
            cursor.execute("UPDATE applications SET phone = ? WHERE id = ?",
                           (db_date, TARGET_ID))
            connection.commit()
            update.message.reply_text(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {db_date}")
            update.message.reply_text("4. –í–≤–µ–¥–∏—Ç–µ Email\n"
                                      "‚ùó –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–∏–º–≤–æ–ª ¬´@¬ª")
        else:
            update.message.reply_text("‚ùó –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤–≤–µ–¥—ë–Ω –Ω–µ–≤–µ—Ä–Ω–æ, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥\n"
                                      "‚ùó –î–æ–ø—É—Å–∫–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã")

    if message.startswith("4."):
        email = [char for char in message][3:]
        if "@" in email:
            db_date = "".join(email)
            cursor.execute("UPDATE applications SET email = ? WHERE id = ?",
                           (db_date, TARGET_ID))
            connection.commit()
            update.message.reply_text(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {db_date}")
            update.message.reply_text("5. –í–≤–µ–¥–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ\n"
                                      "‚ùì –ù–∞–ø—Ä–∏–º–µ—Ä: –í–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã –∏–ª–∏ –Ω–∞–≥—Ä–∞–¥—ã –∑–∞ —É—Å–ø–µ—Ö–∏ "
                                      "–≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏")
        else:
            update.message.reply_text("‚ùó Email –≤–≤–µ–¥—ë–Ω –Ω–µ–≤–µ—Ä–Ω–æ, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥\n"
                                      "‚ùó –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–∏–º–≤–æ–ª ¬´@¬ª")

    if message.startswith("5."):
        db_date = "".join([char for char in message][3:])
        cursor.execute("UPDATE applications SET info = ? WHERE id = ?",
                       (db_date, TARGET_ID))
        connection.commit()
        update.message.reply_text(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {db_date}")

        position_keyboard = [
            [InlineKeyboardButton("–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º",
                                  callback_data="6. –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º")],
            [InlineKeyboardButton("–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ —Ä–µ–∫–ª–∞–º–µ",
                                  callback_data="6. –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ —Ä–µ–∫–ª–∞–º–µ")],
            [InlineKeyboardButton("–ë—É—Ö–≥–∞–ª—Ç–µ—Ä",
                                  callback_data="6. –ë—É—Ö–≥–∞–ª—Ç–µ—Ä")],
            [InlineKeyboardButton("–°–∏—Å—Ç–µ–º–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
                                  callback_data="6. –°–∏—Å—Ç–µ–º–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")],
            [InlineKeyboardButton("–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç",
                                  callback_data="6. –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç")]
        ]
        position_markup = InlineKeyboardMarkup(position_keyboard)
        update.message.reply_text("6. –í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–ª–∂–Ω–æ—Å—Ç—å", reply_markup=position_markup)

        education_keyboard = [
            [InlineKeyboardButton("–°—Ä–µ–¥–Ω–µ–µ –æ–±—â–µ–µ",
                                  callback_data="7. –°—Ä–µ–¥–Ω–µ–µ –æ–±—â–µ–µ")],
            [InlineKeyboardButton("–°—Ä–µ–¥–Ω–µ–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ",
                                  callback_data="7. –°—Ä–µ–¥–Ω–µ–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ")],
            [InlineKeyboardButton("–°—Ä–µ–¥–Ω–µ–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ",
                                  callback_data="7. –°—Ä–µ–¥–Ω–µ–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ")],
            [InlineKeyboardButton("–í—ã—Å—à–µ–µ",
                                  callback_data="7. –í—ã—Å—à–µ–µ")]
        ]
        education_markup = InlineKeyboardMarkup(education_keyboard)
        update.message.reply_text("7. –í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è", reply_markup=education_markup)

        update.message.reply_text("‚ùó –ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –ó–∞–≤–µ—Ä—à–∏—Ç—å",
                                  reply_markup=ReplyKeyboardMarkup([["üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å"]],
                                                                   one_time_keyboard=True,
                                                                   resize_keyboard=True))

    if message == "üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å":
        finish(update, context)


def finish(update, context):
    data = cursor.execute("SELECT * FROM applications WHERE id = ?", (TARGET_ID,)).fetchall()
    update.message.reply_text(f"‚úÖ –î–∞–Ω–Ω—ã–µ –í–∞—à–µ–π –∑–∞—è–≤–∫–∏:\n\n"
                              f"1. –§–ò–û: {data[0][1]} {data[0][2]} {data[0][3]}\n"
                              f"2. –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {data[0][4]}\n"
                              f"3. –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {data[0][5]}\n"
                              f"4. Email: {data[0][6]}\n"
                              f"5. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {data[0][7]}\n"
                              f"6. –í—ã–±—Ä–∞–Ω–Ω–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å: {data[0][8]}\n"
                              f"7. –£—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è: {data[0][9]}")
    connection.commit()
    update.message.reply_text("‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!", reply_markup=reply_markup)


def main():
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("finish", finish))
    dp.add_handler(MessageHandler(Filters.text, interpreter))
    dp.add_handler(CallbackQueryHandler(button))
    updater.start_polling()
    updater.idle()


if __name__ == "__main__":
    main()
